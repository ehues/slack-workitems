{
  "name": "node-slackr",
  "version": "0.0.4",
  "description": "A node.js module for send notifications to Slack, support multiple channel and attachments",
  "main": "index.js",
  "scripts": {
    "test": "mocha test",
    "prepublish": "./node_modules/.bin/coffee --compile --output lib src/*.coffee"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/chenka/node-slackr"
  },
  "keywords": [
    "slack"
  ],
  "author": {
    "name": "Sarunyhot Suvannachoti",
    "email": "teamyakusa@gmail.com"
  },
  "license": "BSD",
  "dependencies": {
    "request": "~2.34.0",
    "coffee-script": "~1.7.1",
    "lodash": "~2.4.1"
  },
  "devDependencies": {
    "mocha": "~1.18.2",
    "nock": "^0.31.0",
    "should": "~3.3.1",
    "supertest": "^0.12.1"
  },
  "readme": "![travis-ci](https://travis-ci.org/chenka/node-slackr.svg)\n\nSummary\n=======\nA simple node.js library for send notifications to [Slack](https://slack.com/) via Incoming WebHooks.\n\n\nInstallation\n=======\nYou can also install via npm:\n```sh\nnpm install node-slackr\n```\n\nInitialize client:\n\n```js\nSlack = require('node-slackr');\nslack = new Slack('team','token');\n```\n\nInitialize with options:\n```js\nslack = new Slack('team','token',{\n  channel: \"#development\",\n  username: \"slack-bot\",\n  icon_url: \"http://domain.com/image.png\",\n  icon_emoji: \":ghost:\"  \n});\n```\n\n###Send message:\n\nIf channel is not set default channel is *#general*\n```js\nslack.notify(\"Message\"); //without callback\nslack.notify(\"Message\", function(err, result){\n    console.log(err,result);\n});\n\n```\n\n###Customized Appearance:\n\nYou can customize the name and icon of your Incoming Webhook.\n\n```js\nmessages = {\n    text: \"Message\",\n    channel: \"#random\",\n    username: \"new-bot-name\",\n    icon_url: \"https://slack.com/img/icons/app-57.png\"\n}\n    \nslack.notify(messages);\n```\n\nSend multiple channels:\n```js\nmessages = {\n    text: \"Message\",\n    channel: [\"#channel1\",\"#channel2\",\"#channel3\"]\n}\n    \nslack.notify(messages);\n```\n\n\n###Message Attachments:\nTo display a richly-formatted message attachment in Slack, you can use the same JSON payload as above, but add in an attachments array. Each element of this array is a hash containing the following parameters:\n\n```js\nmessages = {\n  text: \"Server Down\",\n  channel: \"#alert\"\n  attachments: [\n    {\n      fallback: \"Detected server down\",\n      color: \"#36a64f\", // Can either be one of 'good', 'warning', 'danger'\n      fields: [\n        {\n          title: \"Uptime\",\n          value: \"30 Hours\",\n          short: false \n        },\n        {\n          title: \"Downtime\",\n          value: \"20 Minutes\",\n          short: false \n        }\n      ]\n    }\n  ]\n};\n\nslack.notify(messages, function(err, result) {\n    console.log(err, result);\n});\n\n```\n\n###Documentation\n\nFor more information such as send URL link, Message Formatting, @mention and Parsing modes,  please follow the link below\n\n[Formatting](https://api.slack.com/docs/formatting)\n\n[Incomg Webook](https://my.slack.com/services/new/incoming-webhook)\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/chenka/node-slackr/issues"
  },
  "_id": "node-slackr@0.0.4",
  "dist": {
    "shasum": "d5ba4c70d6fcc05340096ea7eb079fcebf3bba49"
  },
  "_from": "node-slackr@0.0.4",
  "_resolved": "https://registry.npmjs.org/node-slackr/-/node-slackr-0.0.4.tgz"
}
